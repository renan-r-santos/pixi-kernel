[project]
name = "pixi-kernel"
version = "0.2.1"
description = "Python Jupyter kernel using Pixi for reproducible notebooks"
authors = ["Renan Rodrigues dos Santos <renan.engmec@gmail.com>"]
channels = ["conda-forge"]
platforms = ["linux-64", "linux-aarch64", "osx-64", "osx-arm64", "win-64"]


# Dependencies
[feature.base.dependencies]
python = ">=3.8,<4.0"
jupyter_client = ">=7"
msgspec = ">=0.18"


# Development
[feature.dev.pypi-dependencies]
pixi-kernel = { path = ".", editable = true }

[feature.dev.tasks]
update-lock = "scripts/update-lock.sh"


# Testing
[feature.test.dependencies]
pytest = ">=8.1,<9"
pytest-cov = "*"

[feature.test.tasks]
# Unit tests
unit = "COVERAGE_FILE=.coverage.$(python -c 'import platform; print(platform.system())').$PIXI_ENVIRONMENT_NAME python -m pytest --cov pixi_kernel"

# Integration tests
bash-kernel = { cwd = "tests/integration/bash_kernel", cmd = "PYDEVD_DISABLE_FILE_VALIDATION=1 pixi run --locked --manifest-path=pixi.toml python kernel.py" }
ipykernel = { cwd = "tests/integration/ipykernel", cmd = "PYDEVD_DISABLE_FILE_VALIDATION=1 pixi run --locked --manifest-path=pixi.toml python kernel.py" }
r-irkernel = { cwd = "tests/integration/r-irkernel", cmd = "pixi run --locked --manifest-path=pixi.toml python kernel.py" }
xeus-cling = { cwd = "tests/integration/xeus-cling", cmd = "pixi run --locked --manifest-path=pixi.toml python kernel.py" }

# Combined
test = { depends_on = ["unit", "ipykernel", "r-irkernel"] }
coverage = "coverage combine && coverage html && coverage xml"

# Integration tests for platform-specific kernels
[feature.test.target.linux-64.tasks]
test = { depends_on = ["unit", "bash-kernel", "ipykernel", "r-irkernel", "xeus-cling"] }

[feature.test.target.linux-aarch64.tasks]
test = { depends_on = ["unit", "bash-kernel", "ipykernel", "r-irkernel", "xeus-cling"] }

[feature.test.target.osx-64.tasks]
test = { depends_on = ["unit", "bash-kernel", "ipykernel", "r-irkernel"] }

[feature.test.target.osx-arm64.tasks]
test = { depends_on = ["unit", "bash-kernel", "ipykernel", "r-irkernel"] }


# Linting and formatting
[feature.ruff.dependencies]
ruff = ">=0.3.5,<0.4"

[feature.ruff.tasks]
format = "ruff format . && ruff check . --select I --fix"
lint = "ruff format --check . && ruff check ."


# Building
[feature.build.dependencies]
hatch = ">=1.9,<2"
uv = "*"

[feature.build.tasks]
build = "hatch build"
install = { cmd = "uv pip install dist/pixi*.whl", depends_on = ["build"] }


# Python testing matrix
[feature.py38.dependencies]
python = "3.8.*"

[feature.py38.tasks]
test-py38 = { depends_on = ["install", "test"] }

[feature.py39.dependencies]
python = "3.9.*"

[feature.py39.tasks]
test-py39 = { depends_on = ["install", "test"] }

[feature.py310.dependencies]
python = "3.10.*"

[feature.py310.tasks]
test-py310 = { depends_on = ["install", "test"] }

[feature.py311.dependencies]
python = "3.11.*"

[feature.py311.tasks]
test-py311 = { depends_on = ["install", "test"] }

[feature.py312.dependencies]
python = "3.12.*"

[feature.py312.tasks]
test-py312 = { depends_on = ["install", "test"] }


[environments]
default = { features = ["base", "build", "dev", "ruff", "test"], solve-group = "pixi-kernel" }
build = { features = ["build"], solve-group = "pixi-kernel" }
ruff = { features = ["ruff"], solve-group = "pixi-kernel" }
test = { features = ["test"], solve-group = "pixi-kernel" }

# Python testing matrix
py38 = ["py38", "build", "test"]
py39 = ["py39", "build", "test"]
py310 = ["py310", "build", "test"]
py311 = ["py311", "build", "test"]
py312 = ["py312", "build", "test"]
